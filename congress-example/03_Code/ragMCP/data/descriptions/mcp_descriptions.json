{
    "convertLVtoCongress": "Splits a LobbyView database index like 'hjres44-115' into elements like {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }}, that can be used to build the Congress API index. Returns: The result.",
    "getRelevantBillSections": "Takes an obtained Congress API Index representing a bill, and the name of the company in the format of: {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }, 'company_name': 'Exxon Mobil'} and returns the full text of the bill sections that are relevant to the company.",
    "getRelevantBillSectionsReport": "Takes an obtained Congress API Index representing a bill, and the name of the company in the format of: {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }, 'company_name': 'Exxon Mobil'} and returns a company report on the recommmended lobbying efforts for the bills sections.",
    "getBillSponsors": "Fetches the list of sponsors for a given bill from the Congress API (XML format). Takes: A dict in the format of {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }}. Returns: The list of sponsors.",
    "getBillCosponsors": "Takes: An obtained Congress API Index representing a bill in the format of: {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }}. Returns: The list of co-sponsors and the debug messages.",
    "getBillSummary": "Takes: An obtained Congress API Index representing a bill in the format of: {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }}. Returns a list of summaries for the bill.",
    "getBillCommittees": "Takes a Congress API index (e.g., {'congress_index':{'congress': 117, 'bill_type': 'hr', 'bill_number': 3076}}) and returns a list of committee and subcommittee records with activities.",
    "extractBillActions": "Takes: An obtained Congress API Index representing a bill in the format of: {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }}. Returns: A list of legislative actions.",
    "getBillAmendments": "Takes: An obtained Congress API Index representing a bill in the format of: {'congress_index':{ 'congress': 115, 'bill_type': 'hjres', 'bill_number': 44 }}. Returns: The list of amendments (which can be empty).",
    "getAmendmentText": "Takes: A Congress API index for an amendment in the form: {'congress_index':{ 'congress': 117, 'amendment_type': 'samdt', 'amdt_number': '2137', 'submittedDate': '2020-06-08T04:00:00Z' }}. Returns: A list of text versions of the amendment.",
    "getAmendmentSponsors": "Fetches sponsors for a given amendment from the Congress API (XML format), with debug tracing. Takes: A dict in the format of {'congress_index':{ 'congress': 115, 'amendment_type': 'samdt', 'amdt_number': '2137' }}. Returns: The sponsors of the amendment.",
    "getAmendmentActions": "Takes: A Congress API index for a specific amendment to a bill: {'congress_index':{'congress': 117, 'amendment_type': 'samdt', 'amdt_number': '2137' }}. Returns: The legislative actions done on an amendment. Note: This function doesn't return the amendment list that were taken on a bill, for this call getBillAmendments",
    "getAmendmentCoSponsors": "Takes: A Congress API index for an amendment in the form: {'congress_index':{ 'congress': 117, 'amendment_type': 'samdt', 'amdt_number': '2137' }}. Returns: The cosponsors of the amendment.",
    "get_committee_members": "Takes a formal committee name with the structure of {\"committee_name\": \"House Committee on Agriculture\", \"congress\": \"117\"}. Returns: The committee roster of the specified congress.",
    "get_senate_votes": "Takes: {\"congress\": 117, \"session\": 1, \"roll_call_vote_no\": 234}. Returns: The votes of all Senators.",
    "get_house_votes": "Takes: {\"congress\": 117, \"session\": 1, \"roll_call_vote_no\": 234}. Returns: The votes of all Representatives.",
    "getCongressMemberParty": "Takes: A list of bioguideId strings identifying a list of U.S. Congress members, {\"bioguideIds\": ['L000174', ...]}. Returns: The parties of the Congressmen",
    "getCongressMembersState": "Takes: A list of bioguideId strings identifying a list of U.S. Congress members, {\"bioguideIds\": ['L000174', ...]}. Returns: The states or districts of the Congressmen",
    "get_committee_meeting": "Fetches metadata for a specific congressional committee meeting from the Congress API (XML). Takes: a dict {'congress': int, 'chamber': 'house' or 'senate', 'eventid': '117-468'} identifying the meeting. Returns: { 'title': str, 'committee': str, 'documents': list of dicts, 'witnessDocuments': list of dicts, 'witnesses': list of dicts }.",
    "get_committee_report": "Fetches and merges committee report metadata and text from /committee-report/{congress}/{reportType}/{reportNumber} and its /text sub-endpoint; expects congress_index={'congress': int, 'reportType': str, 'reportNumber': int} or {'congress_index': {...}}; returns: { 'citation': str, 'title': str, 'congress': int, 'chamber': str, 'sessionNumber': str, 'reportType': str, 'isConferenceReport': bool, 'part': str, 'updateDate': str, 'issueDate': str, 'committees': list of dicts, 'associatedBills': list of dicts, 'text_links': list of dicts, 'debug': list of debug messages } .",
    "get_committee_actions": "Takes a Congress API index (e.g., {'congress_index':{'congress': 117, 'bill_type': 'hr', 'bill_number': 3076}}) and returns the actions of all committees and subcommittees involved."
  }